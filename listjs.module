<?php

/**
 * @file
 * Search, sort, filter HTML lists using listjs library.
 */

/**
 * Implements hook_views_api().
 */
function listjs_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'listjs') . '/includes/views',
  );
}

/**
 * Implements hook_theme().
 */
function listjs_theme($existing, $type, $theme, $path) {
  return array(
    'listjs' => array(
      'variables' => array(
        'placeholder_text' => NULL,
        'items' => NULL,
        'list_attributes' => NULL,
        'list_id' => NULL,
        'value_names' => NULL,
      ),
      'template' => 'theme/listjs',
    ),
  );
}

/**
 * Implements hook_facetapi_widgets().
 */
function listjs_facetapi_widgets() {
  return array(
    'listjs' => array(
      'handler' => array(
        'label' => t('Listjs'),
        'class' => 'FacetapiWidgetListjs',
        'query types' => array('term', 'date'),
      ),
    ),
  );
}

/**
 * Add more variables to listjs template.
 */
function template_preprocess_listjs(&$variables) {
  // Alter variables if it is rendered from view.
  if (!empty($variables['view'])) {
    $items = array();
    $view = $variables['view'];
    $fields = $view->field;
    $handler = $view->style_plugin;
    $renders = $handler->render_fields($variables['rows']);

    // Prepare items to be shown in the list.
    foreach ($renders as $id => $row) {
      $row_markup = '';

      foreach ($fields as $key => $field) {
        if (empty($field->options['exclude'])) {
          $classes = '';

          // Prepare row classes.
          if ($field->options['element_default_classes']) {
            $classes = 'views-field views-field-' . $field->field;
          }
          if ($field_classes = $field->element_classes($id)) {
            if (!empty($classes)) {
              $classes .= ' ';
            }

            $classes .= $field_classes;
          }

          // Create row markup.
          $element_type = $field->element_type(TRUE, TRUE);
          if ($element_type) {
            $row_markup .= '<' . $element_type . ' class="' . $classes . '">' . $row[$field->field] . '</' . $element_type . '>';
          }
          else {
            $row_markup .= '<div class="' . $classes . '">' . $row[$field->field] . '</div>';
          }
        }
      }

      $items[] = array(
        'data' => $row_markup,
      );
    }

    // Prepare value names.
    foreach ($view->display_handler->get_handlers('field') as $field_handler) {
      if ($variables['options']['filterable_fields'][$field_handler->field]['filterable'] == 1) {
        $element_classes = $field_handler->element_classes();
        $element_wrapper_classes = $field_handler->element_wrapper_classes();

        if (!empty($element_classes)) {
          $value_names = $element_classes;
        }
        else if (!empty($element_wrapper_classes)) {
          $value_names = $element_wrapper_classes;
        }
        else {
          // Views has hard coded this class.
          // @see template_preprocess_views_view_fields()
          $value_names = drupal_html_class('views-field-' . $field_handler->field);
        }

        $variables['value_names'][] = array(
          'value_name' => $value_names,
          'sort' => $variables['options']['filterable_fields'][$field_handler->field]['sort'],
          'sort_text' => $variables['options']['filterable_fields'][$field_handler->field]['sort_text'],
        );
      }
    }

    // Add items to variables array.
    $variables['items'] = $items;
    $variables['placeholder_text'] = $variables['options']['placeholder_text'];
    $variables['list_id'] = $variables['view']->name . '-wrapper';
  }

  // Add default settings and resources.
  // For listjs facet, most of these settings are set by facetapi itself.
  // @see FacetapiWidgetListjs::init()
  $variables['list_attributes']['class'][] = 'list';
  drupal_add_js(array(
    'listJs' => array(
      'listId' => $variables['list_id'],
    ),
  ), 'setting');
  drupal_add_js(array(
    'listJs' => array(
      'valueNames' => $variables['value_names'],
    ),
  ), 'setting');
  drupal_add_js(drupal_get_path('module', 'listjs') . '/js/list.min.js');
  drupal_add_js(drupal_get_path('module', 'listjs') . '/js/listjs.js');
}
